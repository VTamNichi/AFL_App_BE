<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AmateurFootballLeague</name>
    </assembly>
    <members>
        <member name="T:AmateurFootballLeague.AgoraIO.Common.ByteBuffer">
            <summary>
            创建一个可变长的Byte数组方便Push数据和Pop数据
            数组的最大长度为1024,超过会产生溢出
            数组的最大长度由常量MAX_LENGTH设定
            
            注:由于实际需要,可能要从左到右取数据,所以这里
            定义的Pop函数并不是先进后出的函数,而是从0开始.
            
            @Author: Red_angelX
            </summary>
        </member>
        <member name="M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.#ctor(System.Byte[])" -->
        <member name="P:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.Length">
            <summary>
            获取当前ByteBuffer的长度
            </summary>
        </member>
        <member name="P:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.Position">
            <summary>
            获取/设置当前出栈指针位置
            </summary>
        </member>
        <member name="M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.ToByteArray">
            <summary>
            获取ByteBuffer所生成的数组
            长度必须小于 [MAXSIZE]
            </summary>
            <returns>Byte[]</returns>
        </member>
        <member name="M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.Initialize">
            <summary>
            初始化ByteBuffer的每一个元素,并把当前指针指向头一位
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PushByte(System.Byte)" -->
        <!-- Badly formed XML comment ignored for member "M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PushByteArray(System.Byte[])" -->
        <!-- Badly formed XML comment ignored for member "M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PushUInt16(System.UInt16)" -->
        <!-- Badly formed XML comment ignored for member "M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PushInt(System.UInt32)" -->
        <!-- Badly formed XML comment ignored for member "M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PushLong(System.Int64)" -->
        <member name="M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PopByte">
            <summary>
            从ByteBuffer的当前位置弹出一个Byte,并提升一位
            </summary>
            <returns>1字节Byte</returns>
        </member>
        <member name="M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PopUInt16">
            <summary>
            从ByteBuffer的当前位置弹出一个Short,并提升两位
            </summary>
            <returns>2字节Short</returns>
        </member>
        <member name="M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PopUInt">
            <summary>
            从ByteBuffer的当前位置弹出一个uint,并提升4位
            </summary>
            <returns>4字节UInt</returns>
        </member>
        <member name="M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PopLong">
            <summary>
            从ByteBuffer的当前位置弹出一个long,并提升4位
            </summary>
            <returns>4字节Long</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AmateurFootballLeague.AgoraIO.Common.ByteBuffer.PopByteArray(System.Int32)" -->
        <member name="M:AmateurFootballLeague.AgoraIO.Media.DynamicKey4.generatePublicSharingKey(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32)">
            Generate Dynamic Key for Public Sharing Service
            @param appID App IDassigned by Agora
            @param appCertificate App Certificate assigned by Agora
            @param channelName name of channel to join, limited to 64 bytes and should be printable ASCII characters
            @param unixTs unix timestamp in seconds when generating the Dynamic Key
            @param randomInt salt for generating dynamic key
            @param uid user id, range from 0 - max uint32
            @param expiredTs should be 0
            @return String representation of dynamic key
            @throws Exception if any error occurs
        </member>
        <member name="M:AmateurFootballLeague.AgoraIO.Media.DynamicKey4.generateRecordingKey(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32)">
            Generate Dynamic Key for recording service
            @param appID Vendor key assigned by Agora
            @param appCertificate Sign key assigned by Agora
            @param channelName name of channel to join, limited to 64 bytes and should be printable ASCII characters
            @param unixTs unix timestamp in seconds when generating the Dynamic Key
            @param randomInt salt for generating dynamic key
            @param uid user id, range from 0 - max uint32
            @param expiredTs should be 0
            @return String representation of dynamic key
            @throws Exception if any error occurs
        </member>
        <member name="M:AmateurFootballLeague.AgoraIO.Media.DynamicKey4.generateMediaChannelKey(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32)">
            Generate Dynamic Key for media channel service
            @param appID Vendor key assigned by Agora
            @param appCertificate Sign key assigned by Agora
            @param channelName name of channel to join, limited to 64 bytes and should be printable ASCII characters
            @param unixTs unix timestamp in seconds when generating the Dynamic Key
            @param randomInt salt for generating dynamic key
            @param uid user id, range from 0 - max uint32
            @param expiredTs service expiring timestamp. After this timestamp, user will not be able to stay in the channel.
            @return String representation of dynamic key
            @throws Exception if any error occurs
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.LoginWithEmailAndPassword(AmateurFootballLeague.ViewModels.Requests.UserLEPM)">
            <summary>Login with email and password</summary>
            <returns>Return user and token token</returns>
            <response code="200">Returns user and token</response>
            <response code="404">Not found users</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.LoginAmin(AmateurFootballLeague.ViewModels.Requests.UserLM)">
            <summary>Login admin</summary>
            <returns>Return user and token token</returns>
            <response code="200">Returns user and token</response>
            <response code="404">Not found users</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.Login(AmateurFootballLeague.ViewModels.Requests.UserLM)">
            <summary>Login with google</summary>
            <returns>Return user and token token</returns>
            <response code="200">Returns user and token</response>
            <response code="404">Not found users</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.Logout(AmateurFootballLeague.ViewModels.Requests.UserLOM)">
            <summary>Logout the system</summary>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.SendVerifyCode(System.String,System.Int32)">
            <summary>Send verify code from system</summary>
            <returns>Return success</returns>
            <response code="200">Returns success</response>
            <response code="400">Send mail fail</response>
            <response code="500">Internal Server</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.CheckVerifyCode(System.String,System.String)">
            <summary>Check verify code</summary>
            <response code="200">verify code success</response>
            <response code="400">verify code fail</response>
            <response code="500">Internal Server</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.GetListTournamentType(System.String,AmateurFootballLeague.ViewModels.Requests.FootballFieldTypeEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list football field types</summary>
            <returns>List football field types</returns>
            <response code="200">Returns list football field types</response>
            <response code="404">Not found football field types</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.GetFootballFieldTypeById(System.Int32)">
            <summary>Get football field type by id</summary>
            <returns>Return the football field type with the corresponding id</returns>
            <response code="200">Returns the football field type with the specified id</response>
            <response code="404">No football field type found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.CreateFootballFieldType(AmateurFootballLeague.ViewModels.Requests.FootballFieldTypeCM)">
            <summary>Create a new football field type</summary>
            <response code="201">Created new football field type successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.UpdateFootballFieldType(System.Int32,System.String,System.String)">
            <summary>Update a football field type</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.DeleteById(System.Int32)">
            <summary>Delete football field type By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballPlayerController.GetListFootballPlayer(System.String,AmateurFootballLeague.ViewModels.Requests.FootballPlayerFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list football player</summary>
            <returns>List football player</returns>
            <response code="200">Returns list football player</response>
            <response code="404">Not found football player</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballPlayerController.GetFootballPlayerById(System.Int32)">
            <summary>Get football player by id</summary>
            <returns>Return the football player with the corresponding id</returns>
            <response code="200">Returns the football player with the specified id</response>
            <response code="404">No football player found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballPlayerController.CreateFootballPlayer(AmateurFootballLeague.ViewModels.Requests.FootballPlayerCM)">
            <summary>Create a new football player</summary>
            <response code="201">Created new football player successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballPlayerController.UpdateFootballPlayer(AmateurFootballLeague.ViewModels.Requests.FootballPlayerUM)">
            <summary>Update a football player</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballPlayerController.ChangeStatusFootballPlayer(System.Int32)">
            <summary>Change status football player By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballPlayerController.DeleteById(System.Int32)">
            <summary>Delete football player By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.ImageController.GetListImage(AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list image</summary>
            <returns>List image</returns>
            <response code="200">Returns list image</response>
            <response code="404">Not found image</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.ImageController.GetImageById(System.Int32)">
            <summary>Get image by id</summary>
            <returns>Return the image with the corresponding id</returns>
            <response code="200">Returns the image with the specified id</response>
            <response code="404">No image found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.ImageController.CreateImage(AmateurFootballLeague.ViewModels.Requests.ImageCM)">
            <summary>Create a new image</summary>
            <response code="201">Created new image successfull</response>
            <response code="400">Field is not imageed or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.ImageController.UpdateImage(AmateurFootballLeague.ViewModels.Requests.ImageUM)">
            <summary>Update a image</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not imageed</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.ImageController.ChangeStatusImage(System.Int32)">
            <summary>Change status image By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.ImageController.DeleteById(System.Int32)">
            <summary>Delete image By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.MatchController.GetListMatch(System.String,AmateurFootballLeague.ViewModels.Requests.MatchFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list match</summary>
            <returns>List match</returns>
            <response code="200">Returns list match</response>
            <response code="404">Not found match</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.MatchController.GetMatchById(System.Int32)">
            <summary>Get match by id</summary>
            <returns>Return the match with the corresponding id</returns>
            <response code="200">Returns the match with the specified id</response>
            <response code="404">No match found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.MatchController.CreateMatch(System.DateTime,AmateurFootballLeague.ViewModels.Requests.MatchStatusEnum,System.Int32,System.String,System.String,System.String)">
            <summary>Create a new match</summary>
            <response code="201">Created new match successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.MatchController.UpdateMatch(System.Int32,System.Nullable{System.DateTime},System.Nullable{AmateurFootballLeague.ViewModels.Requests.MatchStatusEnum},System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>Update a match</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.MatchController.DeleteById(System.Int32)">
            <summary>Delete match By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.MatchController.ScheduleMatch(System.Int32)">
            <summary>Schedule the match</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.NewsController.GetListNews(System.String,AmateurFootballLeague.ViewModels.Requests.NewsFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list news</summary>
            <returns>List news</returns>
            <response code="200">Returns list news</response>
            <response code="404">Not found news</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.NewsController.GetNewsById(System.Int32)">
            <summary>Get news by id</summary>
            <returns>Return the news with the corresponding id</returns>
            <response code="200">Returns the news with the specified id</response>
            <response code="404">No news found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.NewsController.CreateNews(System.String,System.Int32)">
            <summary>Create a new news</summary>
            <response code="201">Created new news successfull</response>
            <response code="400">Field is not newsed or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.NewsController.UpdateNews(System.String,System.Nullable{System.Int32})">
            <summary>Update a news</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not newsed</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.NewsController.ChangeStatusNews(System.Int32)">
            <summary>Change status news By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.NewsController.DeleteById(System.Int32)">
            <summary>Delete news By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.PromoteRequestController.GetListPromoteRequest(System.String,System.String,System.String,System.String,System.String,System.String,AmateurFootballLeague.ViewModels.Requests.PromoteRequestFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list promote requests</summary>
            <returns>List promoteRequests</returns>
            <response code="200">Returns list promoteRequests</response>
            <response code="404">Not found promoteRequests</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.GetListRole(System.String,AmateurFootballLeague.ViewModels.Requests.RoleFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list roles</summary>
            <returns>List roles</returns>
            <response code="200">Returns list roles</response>
            <response code="404">Not found roles</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.GetRoleById(System.Int32)">
            <summary>Get role by id</summary>
            <returns>Return the role with the corresponding id</returns>
            <response code="200">Returns the role type with the specified id</response>
            <response code="404">No role found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.CreateRole(AmateurFootballLeague.ViewModels.Requests.RoleCM)">
            <summary>Create a new role</summary>
            <response code="201">Created new role successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.UpdateRole(System.Int32,System.String)">
            <summary>Update a role</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.DeleteById(System.Int32)">
            <summary>Delete role By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamController.GetListTeam(System.String,System.String,System.Nullable{AmateurFootballLeague.ViewModels.Requests.TeamGenderEnum},AmateurFootballLeague.ViewModels.Requests.TeamFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list team</summary>
            <returns>List team</returns>
            <response code="200">Returns list team</response>
            <response code="404">Not found team</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamController.GetTeamById(System.Int32)">
            <summary>Get team by id</summary>
            <returns>Return the team with the corresponding id</returns>
            <response code="200">Returns the team with the specified id</response>
            <response code="404">No team found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamController.CreateTeam(AmateurFootballLeague.ViewModels.Requests.TeamCM)">
            <summary>Create a new team</summary>
            <response code="201">Created new team successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamController.UpdateTeam(AmateurFootballLeague.ViewModels.Requests.TeamUM)">
            <summary>Update a team</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamController.ChangeStatusTeam(System.Int32)">
            <summary>Change status team By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamController.DeleteById(System.Int32)">
            <summary>Delete team By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamController.GetCountAllTeam">
            <summary>Get count all team</summary>
            <returns>Return the count of team with the corresponding id</returns>
            <response code="200">Returns the count of team with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamController.GetTop4Team">
            <summary>Get top 4 teams by achievement</summary>
            <returns>Return top 4 teams by achievement</returns>
            <response code="200">Returns top 4 teams by achievement</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamInTournamentController.GetListTeamInTournament(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,AmateurFootballLeague.ViewModels.Requests.TeamInTournamentFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list team in tournament</summary>
            <returns>List team in tournament</returns>
            <response code="200">Returns list team in tournament</response>
            <response code="404">Not found team in tournament</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamInTournamentController.GetTeamInTournamentById(System.Int32)">
            <summary>Get team in tournament by id</summary>
            <returns>Return the team in tournament with the corresponding id</returns>
            <response code="200">Returns the team in tournament with the specified id</response>
            <response code="404">No team in tournament found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamInTournamentController.CreateTeamInTournament(AmateurFootballLeague.ViewModels.Requests.TeamInTournamentCM)">
            <summary>Create a new team in tournament</summary>
            <response code="201">Created new team in tournament successfull</response>
            <response code="400">Field is not team in tournament or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamInTournamentController.UpdateTeamInTournament(AmateurFootballLeague.ViewModels.Requests.TeamInTournamentUM)">
            <summary>Update a team in tournament</summary>
            <response code="201">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not team in tournament</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TeamInTournamentController.DeleteById(System.Int32)">
            <summary>Delete team in tournament By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.GetListTournament(System.String,System.Nullable{System.Int32},System.String,System.Nullable{AmateurFootballLeague.ViewModels.Requests.TournamentModeEnum},System.Nullable{AmateurFootballLeague.ViewModels.Requests.TournamentTypeEnum},System.Nullable{AmateurFootballLeague.ViewModels.Requests.TournamentGenderEnum},System.Nullable{AmateurFootballLeague.ViewModels.Requests.TournamentFootballFieldTypeEnum},AmateurFootballLeague.ViewModels.Requests.TournamentFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list tournament</summary>
            <returns>List tournament</returns>
            <response code="200">Returns list tournament</response>
            <response code="404">Not found tournament</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.GetTournamentById(System.Int32)">
            <summary>Get tournament by id</summary>
            <returns>Return the tournament with the corresponding id</returns>
            <response code="200">Returns the tournament with the specified id</response>
            <response code="404">No tournament found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.CreateTournament(AmateurFootballLeague.ViewModels.Requests.TournamentCM)">
            <summary>Create a new tournament</summary>
            <response code="201">Created new tournament successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.UpdateTournament(AmateurFootballLeague.ViewModels.Requests.TournamentUM)">
            <summary>Update a tournament</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.ChangeStatusTournament(System.Int32)">
            <summary>Change status tournament By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.DeleteById(System.Int32)">
            <summary>Delete tournament By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.GetCountAllTournament">
            <summary>Get count all tournament</summary>
            <returns>Return the count of tournament with the corresponding id</returns>
            <response code="200">Returns the count of tournament with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentResultController.GetListTournamentResult(System.String,AmateurFootballLeague.ViewModels.Requests.TournamentResultFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list tournament result</summary>
            <returns>List tournamentResult</returns>
            <response code="200">Returns list tournamentResult</response>
            <response code="404">Not found tournamentResult</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentResultController.GetTournamentResultById(System.Int32)">
            <summary>Get tournament result by id</summary>
            <returns>Return the tournament result with the corresponding id</returns>
            <response code="200">Returns the tournament result with the specified id</response>
            <response code="404">No tournament result found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentResultController.CreateTournamentResult(AmateurFootballLeague.ViewModels.Requests.TournamentResultCM)">
            <summary>Create a new tournament result</summary>
            <response code="201">Created new tournament result successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentResultController.UpdateTournamentResult(AmateurFootballLeague.ViewModels.Requests.TournamentResultUM)">
            <summary>Update a tournament result</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentResultController.DeleteById(System.Int32)">
            <summary>Delete tournament result By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.GetListTournamentType(System.String,AmateurFootballLeague.ViewModels.Requests.TournamentTypeFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list tournament types</summary>
            <returns>List tournament types</returns>
            <response code="200">Returns list tournament types</response>
            <response code="404">Not found tournament types</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.GetTournamentTypeById(System.Int32)">
            <summary>Get tournament type by id</summary>
            <returns>Return the tournament type with the corresponding id</returns>
            <response code="200">Returns the tournament type with the specified id</response>
            <response code="404">No tournament type found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.CreateTournamentType(AmateurFootballLeague.ViewModels.Requests.TournamentTypeCM)">
            <summary>Create a new tournament type</summary>
            <response code="201">Created new tournament type successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.UpdateTournamentType(System.Int32,System.String,System.String)">
            <summary>Update a tournament type</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.DeleteById(System.Int32)">
            <summary>Delete tournament type By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.GetListUser(System.String,System.Nullable{AmateurFootballLeague.ViewModels.Requests.UserGenderEnum},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},AmateurFootballLeague.ViewModels.Requests.UserFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list users</summary>
            <returns>List users</returns>
            <response code="200">Returns list roles</response>
            <response code="404">Not found users</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.GetUserByIdOrEmail(System.String,AmateurFootballLeague.ViewModels.Requests.UserSearchType)">
            <summary>Get user by id or email</summary>
            <returns>Return the user with the corresponding id</returns>
            <response code="200">Returns the user type with the specified id</response>
            <response code="404">No user found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.CreateUser(AmateurFootballLeague.ViewModels.Requests.UserCM)">
            <summary>Create a new user</summary>
            <response code="201">Created new user successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.UpdateUser(AmateurFootballLeague.ViewModels.Requests.UserUM)">
            <summary>Update a user</summary>
            <response code="201">Update user successfull</response>
            <response code="404">User is not found</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.ChangeStatus(System.Int32)">
            <summary>Change status user</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>Delete user by Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.ChangePassword(AmateurFootballLeague.ViewModels.Requests.UserCPM)">
            <summary>Change password</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Wrong password</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.ResetPassword(AmateurFootballLeague.ViewModels.Requests.UserRPM)">
            <summary>Reset password</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Wrong password</response>
            <response code="500">Failed to save request</response>
        </member>
    </members>
</doc>
