<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AmateurFootballLeague</name>
    </assembly>
    <members>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.LoginWithEmailAndPassword(AmateurFootballLeague.ViewModels.Requests.UserLEPM)">
            <summary>Login with email and password</summary>
            <returns>Return user and token token</returns>
            <response code="200">Returns user and token</response>
            <response code="404">Not found users</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.Login(AmateurFootballLeague.ViewModels.Requests.UserLM)">
            <summary>Login with google</summary>
            <returns>Return user and token token</returns>
            <response code="200">Returns user and token</response>
            <response code="404">Not found users</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.Logout(AmateurFootballLeague.ViewModels.Requests.UserLOM)">
            <summary>Logout the system</summary>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.AuthController.uploadFileImage(AmateurFootballLeague.ViewModels.Requests.ImageCM)">
            <summary>Upload image to firebase</summary>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.GetListTournamentType(System.String,AmateurFootballLeague.ViewModels.Requests.FootballFieldTypeEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list football field types</summary>
            <returns>List football field types</returns>
            <response code="200">Returns list football field types</response>
            <response code="404">Not found football field types</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.GetFootballFieldTypeById(System.Int32)">
            <summary>Get football field type by id</summary>
            <returns>Return the football field type with the corresponding id</returns>
            <response code="200">Returns the football field type with the specified id</response>
            <response code="404">No football field type found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.CreateFootballFieldType(AmateurFootballLeague.ViewModels.Requests.FootballFieldTypeCM)">
            <summary>Create a new football field type</summary>
            <response code="201">Created new football field type successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.UpdateFootballFieldType(System.Int32,System.String,System.String)">
            <summary>Update a football field type</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.FootballFieldTypeController.DeleteById(System.Int32)">
            <summary>Delete football field type By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.GetListRole(System.String,AmateurFootballLeague.ViewModels.Requests.RoleFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list roles</summary>
            <returns>List roles</returns>
            <response code="200">Returns list roles</response>
            <response code="404">Not found roles</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.GetRoleById(System.Int32)">
            <summary>Get role by id</summary>
            <returns>Return the role with the corresponding id</returns>
            <response code="200">Returns the role type with the specified id</response>
            <response code="404">No role found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.CreateRole(AmateurFootballLeague.ViewModels.Requests.RoleCM)">
            <summary>Create a new role</summary>
            <response code="201">Created new role successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.UpdateRole(System.Int32,System.String)">
            <summary>Update a role</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.RoleController.DeleteById(System.Int32)">
            <summary>Delete role By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.GetListTournamentType(System.String,AmateurFootballLeague.ViewModels.Requests.TournamentFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list tournament</summary>
            <returns>List tournament</returns>
            <response code="200">Returns list tournament</response>
            <response code="404">Not found tournament</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.GetTournamentById(System.Int32)">
            <summary>Get tournament by id</summary>
            <returns>Return the tournament with the corresponding id</returns>
            <response code="200">Returns the tournament with the specified id</response>
            <response code="404">No tournament found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.CreateTournament(AmateurFootballLeague.ViewModels.Requests.TournamentCM)">
            <summary>Create a new tournament</summary>
            <response code="201">Created new tournament successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.UpdateTournament(AmateurFootballLeague.ViewModels.Requests.TournamentUM)">
            <summary>Update a tournament</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.ChangeStatusTournament(System.Int32)">
            <summary>Change status tournament By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentController.DeleteById(System.Int32)">
            <summary>Delete tournament By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.GetListTournamentType(System.String,AmateurFootballLeague.ViewModels.Requests.TournamentTypeFieldEnum,AmateurFootballLeague.Utils.SortTypeEnum,System.Int32,System.Int32)">
            <summary>Get list tournament types</summary>
            <returns>List tournament types</returns>
            <response code="200">Returns list tournament types</response>
            <response code="404">Not found tournament types</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.GetTournamentTypeById(System.Int32)">
            <summary>Get tournament type by id</summary>
            <returns>Return the tournament type with the corresponding id</returns>
            <response code="200">Returns the tournament type with the specified id</response>
            <response code="404">No tournament type found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.CreateTournamentType(AmateurFootballLeague.ViewModels.Requests.TournamentTypeCM)">
            <summary>Create a new tournament type</summary>
            <response code="201">Created new tournament type successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.UpdateTournamentType(System.Int32,System.String,System.String)">
            <summary>Update a tournament type</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Field is not matched</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.TournamentTypeController.DeleteById(System.Int32)">
            <summary>Delete tournament type By Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.GetListUser(AmateurFootballLeague.ViewModels.Requests.UserFieldEnum,System.Int32,System.Int32)">
            <summary>Get list users</summary>
            <returns>List users</returns>
            <response code="200">Returns list roles</response>
            <response code="404">Not found users</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.GetUserByIdOrEmail(System.String,AmateurFootballLeague.ViewModels.Requests.UserSearchType)">
            <summary>Get user by id or email</summary>
            <returns>Return the user with the corresponding id</returns>
            <response code="200">Returns the user type with the specified id</response>
            <response code="404">No user found with the specified id</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.CreateUser(AmateurFootballLeague.ViewModels.Requests.UserCM)">
            <summary>Create a new user</summary>
            <response code="201">Created new user successfull</response>
            <response code="400">Field is not matched or duplicated</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.UpdateUser(AmateurFootballLeague.ViewModels.Requests.UserUM)">
            <summary>Update a new user</summary>
            <response code="201">Update user successfull</response>
            <response code="404">User is not found</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.ChangeStatus(System.Int32)">
            <summary>Change status user</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Failed to save request</response>
        </member>
        <member name="M:AmateurFootballLeague.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>Delete user by Id</summary>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="400">Bad Request</response>
            <response code="500">Failed to save request</response>
        </member>
    </members>
</doc>
